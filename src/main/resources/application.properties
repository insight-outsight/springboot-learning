spring.application.name=springboot-learning-api

mybatis.configuration.map-underscore-to-camel-case=true

localKey0001=im lk

debug=true
trace=false

#spring.profiles.include=shardingjdbc-config-${spring.profiles.active}

## 启用缓存:建议生产开启
#spring.thymeleaf.cache=false 
## 建议模版是否存在
#spring.thymeleaf.check-template-location=true 
## Content-Type 值
#spring.thymeleaf.content-type=text/html
## 是否启用
#spring.thymeleaf.enabled=true
## 模版编码
#spring.thymeleaf.encoding=UTF-8
## 应该从解析中排除的视图名称列表（用逗号分隔）
#spring.thymeleaf.excluded-view-names= 
## 模版模式
#spring.thymeleaf.mode=HTML5
## 模版存放路径，默认为src/main/resources/templates或者src/main/view/templates
##spring.thymeleaf.prefix=classpath:/templates/ 
## 模版后缀
#spring.thymeleaf.suffix=.html

spring.kafka.bootstrap-servers=192.168.2.101:9092,192.168.2.102:9092,192.168.2.103:9092
kafka0821.producer.serializer.class=kafka.serializer.StringEncoder
kafka0821.producer.key.serializer.class=kafka.serializer.StringEncoder
kafka0821.producer.pool.size=4
kafka0821.zookeeper=192.168.1.16:2182,192.168.1.17:2182,192.168.1.18:2182
kafka0821.zookeeper.session.timeout.ms=10000
kafka0821.zookeeper.sync.time.ms=2000
kafka0821.consumer.auto.commit.interval.ms=10000
kafka0821.consumer.timeout.ms=-1
kafka0821.enable.auto.commit=true
kafka0821.consumer.topics=woneic,test-topic1
kafka0821.consumer.pool.size=3
#=============== provider  =======================
spring.kafka.producer.acks=1
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
 
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
 
#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=cousumer-test-01
 
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
 
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#    auto.commit.interval.ms = 5000
#    check.crcs = true
#    client.id = 
#    connections.max.idle.ms = 540000
#    default.api.timeout.ms = 60000
#    enable.auto.commit = true
#    exclude.internal.topics = true
#    fetch.max.bytes = 52428800
#    fetch.max.wait.ms = 500
#    fetch.min.bytes = 1
#    group.id = kafka2
#    heartbeat.interval.ms = 3000
#    interceptor.classes = []
#    internal.leave.group.on.close = true
#    isolation.level = read_uncommitted
#    key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
#    max.partition.fetch.bytes = 1048576
#    max.poll.interval.ms = 300000
#    max.poll.records = 500
#    metadata.max.age.ms = 300000
#    metric.reporters = []
#    metrics.num.samples = 2
#    metrics.recording.level = INFO
#    metrics.sample.window.ms = 30000
#    partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
#    receive.buffer.bytes = 65536
#    reconnect.backoff.max.ms = 1000
#    reconnect.backoff.ms = 50
#    request.timeout.ms = 30000
#    retry.backoff.ms = 100
#    sasl.client.callback.handler.class = null
#    sasl.jaas.config = null
#    sasl.kerberos.kinit.cmd = /usr/bin/kinit
#    sasl.kerberos.min.time.before.relogin = 60000
#    sasl.kerberos.service.name = null
#    sasl.kerberos.ticket.renew.jitter = 0.05
#    sasl.kerberos.ticket.renew.window.factor = 0.8
#    sasl.login.callback.handler.class = null
#    sasl.login.class = null
#    sasl.login.refresh.buffer.seconds = 300
#    sasl.login.refresh.min.period.seconds = 60
#    sasl.login.refresh.window.factor = 0.8
#    sasl.login.refresh.window.jitter = 0.05
#    sasl.mechanism = GSSAPI
#    security.protocol = PLAINTEXT
#    send.buffer.bytes = 131072
#    session.timeout.ms = 10000
#    ssl.cipher.suites = null
#    ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
#    ssl.endpoint.identification.algorithm = https
#    ssl.key.password = null
#    ssl.keymanager.algorithm = SunX509
#    ssl.keystore.location = null
#    ssl.keystore.password = null
#    ssl.keystore.type = JKS
#    ssl.protocol = TLS
#    ssl.provider = null
#    ssl.secure.random.implementation = null
#    ssl.trustmanager.algorithm = PKIX
#    ssl.truststore.location = null
#    ssl.truststore.password = null
#    ssl.truststore.type = JKS